"""
@file Admitad Integration Backend
@version 3.1.0
@description –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Å–µ—Ä–≤–µ—Ä–Ω—ã–π API-—à–ª—é–∑ –¥–ª—è —Ç—Ä–µ–∫–µ—Ä–∞ Admitad.
–ï–≥–æ –∑–∞–¥–∞—á–∏:
1. –ü—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∏–∑–∏—Ç–∞ –æ—Ç int_loader.js –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ First-Party, HttpOnly cookie.
2. –ü—Ä–∏–Ω–∏–º–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–Ω–≤–µ—Ä—Å–∏—è—Ö, —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ.
3. –ü—Ä–æ–≤–æ–¥–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏ –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É Last Paid Click, —Ä–µ—à–∞—è, –Ω—É–∂–Ω–æ –ª–∏ –∞—Ç—Ä–∏–±—É—Ü–∏—Ä–æ–≤–∞—Ç—å –∑–∞–∫–∞–∑ Admitad.
4. –§–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—ã–π (S2S) postback-–∑–∞–ø—Ä–æ—Å –≤ Admitad.
5. –û—Ç–¥–∞–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç int_loader.js –ø–æ–¥ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–æ–≤.
6. –í–µ—Å—Ç–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª, –Ω–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—è –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
"""

import logging.handlers
import requests
import json
import os
from fastapi import APIRouter, HTTPException, Request, BackgroundTasks, Response
from fastapi.responses import FileResponse
from pydantic import BaseModel, Field
from typing import List, Optional
from dotenv import load_dotenv

# --- ‚öôÔ∏è 1. –ó–ê–ì–†–£–ó–ö–ê –ò–ó–û–õ–ò–†–û–í–ê–ù–ù–û–ô –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ---
# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ .env —Ñ–∞–π–ª—É, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —ç—Ç–æ–π –∂–µ –ø–∞–ø–∫–∏.
# –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–ª–∞–≥–∏–Ω—É –∏–º–µ—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ, –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.

dotenv_path = os.path.join(os.path.dirname(__file__), ".admitad.env")
load_dotenv(dotenv_path=dotenv_path)


# --- ‚öôÔ∏è 2. –ù–ê–°–¢–†–û–ô–ö–ê –ò–ó–û–õ–ò–†–û–í–ê–ù–ù–û–ì–û –õ–û–ì–ì–ï–†–ê ---
# –≠—Ç–æ—Ç –±–ª–æ–∫ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–ª–∞–≥–∏–Ω–∞,
# –∫–æ—Ç–æ—Ä–∞—è –ø–∏—à–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª
# –∏ –Ω–µ –º–µ—à–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Å–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞.

LOG_LEVEL = os.getenv("ADMITAD_LOG_LEVEL", "INFO").upper()
LOG_FILENAME = os.getenv("ADMITAD_LOG_FILE", "admitad_tracker.log")
LOG_MAX_BYTES = int(os.getenv("ADMITAD_LOG_MAX_BYTES", "5242880"))
LOG_BACKUP_COUNT = int(os.getenv("ADMITAD_LOG_BACKUP_COUNT", "3"))

# –°–æ–∑–¥–∞–µ–º –ª–æ–≥–≥–µ—Ä —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º 'admitad_tracker',
# —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å –ª–æ–≥–≥–µ—Ä–∞–º–∏ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—è.
log = logging.getLogger("admitad_tracker")
log.setLevel(LOG_LEVEL)

# –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–∏—Å–∞—Ç—å –ª–æ–≥–∏ –≤ —Ñ–∞–π–ª —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–æ—Ç–∞—Ü–∏–µ–π.
# –ö–æ–≥–¥–∞ —Ñ–∞–π–ª –¥–æ—Å—Ç–∏–≥–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞, –æ–Ω –∞—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç—Å—è, –∏ —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π.
log_filepath = os.path.join(os.path.dirname(__file__), LOG_FILENAME)
handler = logging.handlers.RotatingFileHandler(
    log_filepath, maxBytes=LOG_MAX_BYTES, backupCount=LOG_BACKUP_COUNT
)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–¥–∏–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–µ.
formatter = logging.Formatter("%(asctime)s - %(levelname)s - %(message)s")
handler.setFormatter(formatter)

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—à —Ñ–∞–π–ª–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫ –ª–æ–≥–≥–µ—Ä—É.
log.addHandler(handler)

# –í–ê–ñ–ù–û: –æ—Ç–∫–ª—é—á–∞–µ–º "–≤—Å–ø–ª—ã—Ç–∏–µ" –ª–æ–≥–æ–≤ –∫ –∫–æ—Ä–Ω–µ–≤–æ–º—É –ª–æ–≥–≥–µ—Ä—É.
# –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –ª–æ–≥–∏ –Ω–∞—à–µ–≥–æ –ø–ª–∞–≥–∏–Ω–∞ –Ω–µ –ø–æ–ø–∞–¥—É—Ç –≤ –æ–±—â—É—é –∫–æ–Ω—Å–æ–ª—å —Å–µ—Ä–≤–µ—Ä–∞.
log.propagate = False

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ FastAPI ---
router = APIRouter()


# --- ‚öôÔ∏è 3. –ß–¢–ï–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–û–ù–ù–´–• –ù–ê–°–¢–†–û–ï–ö ---
# –í—Å–µ —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ —Ñ–∞–π–ª .admitad.env

COOKIE_LIFETIME_DAYS = int(os.getenv("COOKIE_LIFETIME_DAYS", "90"))
ADMITAD_CAMPAIGN_CODE = os.getenv("ADMITAD_CAMPAIGN_CODE")
ADMITAD_POSTBACK_KEY = os.getenv("ADMITAD_POSTBACK_KEY")
DEFAULT_ACTION_CODE = os.getenv("DEFAULT_ACTION_CODE", "1")
DEFAULT_TARIFF_CODE = os.getenv("DEFAULT_TARIFF_CODE", "1")
DEFAULT_CURRENCY_CODE = os.getenv("DEFAULT_CURRENCY_CODE", "RUB")


# --- üì¶ 4. –ú–û–î–ï–õ–ò –î–ê–ù–ù–´–• (PYDANTIC) ---
# –ú–æ–¥–µ–ª–∏ Pydantic –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —Å—Ç—Ä–æ–≥—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é
# –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Ç int_loader.js,
# —á—Ç–æ –∑–∞—â–∏—â–∞–µ—Ç API –æ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫.


class TrackingParams(BaseModel):
    """–ú–æ–¥–µ–ª—å –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ int_loader.js —Å–æ–±–∏—Ä–∞–µ—Ç –∏–∑ URL."""

    admitad_uid: Optional[str] = None
    pid: Optional[str] = None
    utm_source: Optional[str] = None
    gclid: Optional[str] = None
    fbclid: Optional[str] = None


# --- –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è API-—à–ª—é–∑–∞ ---
class TrackingCartItem(BaseModel):
    """–ú–æ–¥–µ–ª—å –¥–ª—è –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ."""

    id: str
    price: float
    quantity: int
    sku: Optional[str] = None


class TrackingEvent(BaseModel):
    """–ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏, –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏—Å—ã–ª–∞–µ—Ç int_loader.js."""

    order_id: str = Field(..., alias="orderId")
    order_amount: float = Field(..., alias="orderAmount")
    payment_type: str = Field(..., alias="paymentType")
    items: List[TrackingCartItem] = []  # –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    action_code: Optional[str] = Field(None, alias="actionCode")
    tariff_codes: Optional[List[str]] = Field(None, alias="tariffCodes")
    promocode: Optional[str] = Field(None, alias="promocode")
    currency: Optional[str] = Field(None, alias="currency")


# --- üõ†Ô∏è 5. –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ---


def send_postback_in_background(url: str, params: dict, order_id: str):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç GET-–∑–∞–ø—Ä–æ—Å (postback) –≤ Admitad –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.
    –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ—Ç–¥–∞—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é,
    –Ω–µ –¥–æ–∂–∏–¥–∞—è—Å—å –æ—Ç–≤–µ—Ç–∞ –æ—Ç Admitad.
    """
    try:
        params_for_log = params.copy()
        if "postback_key" in params_for_log:
            params_for_log["postback_key"] = "********"  # –ú–∞—Å–∫–∏—Ä—É–µ–º –∫–ª—é—á –≤ –ª–æ–≥–∞—Ö
        log.debug(f"–§–û–ù–û–í–ê–Ø –û–¢–ü–†–ê–í–ö–ê: URL: {url}, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {params_for_log}")
        # –î–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å—Ç–∞–≤–∏—Ç—å –±–æ–ª–µ–µ –¥–æ–ª–≥–∏–π —Ç–∞–π–º–∞—É—Ç
        response = requests.get(url, params=params, timeout=10)
        response.raise_for_status()  # –í—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É, –µ—Å–ª–∏ HTTP-—Å—Ç–∞—Ç—É—Å 4xx –∏–ª–∏ 5xx
        log.info(f"–§–û–ù–û–í–´–ô –ü–û–°–¢–ë–≠–ö –¥–ª—è –∑–∞–∫–∞–∑–∞ {order_id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    except requests.exceptions.RequestException as e:
        log.error(
            f"–û–®–ò–ë–ö–ê –§–û–ù–û–í–û–ì–û –ü–û–°–¢–ë–≠–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å S2S Postback –¥–ª—è –∑–∞–∫–∞–∑–∞ {order_id}: {e}"
        )


# --- üöÄ 6. API-–≠–ù–î–ü–û–ò–ù–¢–´ ---


@router.post("/init-tracking", summary="–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–∫–∏–Ω–≥–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ cookie")
def initialize_tracking(params: TrackingParams, response: Response):
    """
    –≠–Ω–¥–ø–æ–∏–Ω—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∏–∑–∏—Ç–∞ –æ—Ç int_loader.js.
    –ï–≥–æ –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å First-Party, HttpOnly cookie.
    –§–ª–∞–≥ HttpOnly –¥–µ–ª–∞–µ—Ç cookie –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è –∏–∑ JavaScript,
    —á—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º –∑–∞—â–∏—Ç—ã –æ—Ç XSS-–∞—Ç–∞–∫.
    """
    log.debug(f"–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–∫–∏–Ω–≥–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: {params.model_dump()}")

    # 1. –õ–æ–≥–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ _adm_aid –∏ _pid
    if params.admitad_uid:
        response.set_cookie(
            key="_adm_aid",
            value=params.admitad_uid,
            max_age=COOKIE_LIFETIME_DAYS * 86400,
            httponly=True,
            samesite="lax",
        )
    if params.pid:
        response.set_cookie(
            key="_pid",
            value=params.pid,
            max_age=COOKIE_LIFETIME_DAYS * 86400,
            httponly=True,
            samesite="lax",
        )

    # 2. –õ–æ–≥–∏–∫–∞ –∞—Ç—Ä–∏–±—É—Ü–∏–∏: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é cookie.
    source = None
    if params.utm_source:
        source = params.utm_source
    elif params.gclid:  # –ü–µ—Ä–µ—Ö–æ–¥ –∏–∑ Google Ads
        source = "advAutoMarkup"
    elif params.fbclid:  # –ü–µ—Ä–µ—Ö–æ–¥ –∏–∑ Facebook Ads
        source = "facebook"

    if source:
        response.set_cookie(
            key="_last_source",
            value=source,
            max_age=COOKIE_LIFETIME_DAYS * 86400,
            httponly=True,
            samesite="lax",
        )
        log.info(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ cookie _last_source: {source}")

    return {"status": "cookies initiated"}


# --- 7. API-—à–ª—é–∑ –¥–ª—è –ø—Ä–∏–µ–º–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Ç—Ä–µ–∫–µ—Ä–∞ ---
@router.post("/track-conversion", summary="API-—à–ª—é–∑ –¥–ª—è —Ç—Ä–µ–∫–∏–Ω–≥–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–π")
async def track_conversion(
    event: TrackingEvent, request: Request, background_tasks: BackgroundTasks
):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–ø—Ä–æ—Å, –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    –∏ —Å—Ç–∞–≤–∏—Ç –æ—Ç–ø—Ä–∞–≤–∫—É S2S Postback –≤ —Ñ–æ–Ω–æ–≤—É—é –æ—á–µ—Ä–µ–¥—å.
    """
    log.debug("--- Endpoint /api/track-conversion –≤—ã–∑–≤–∞–Ω ---")
    # 1. –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö HttpOnly cookie, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ä–∞–Ω–µ–µ.
    uid_from_cookie = request.cookies.get("_adm_aid")
    source_from_cookie = request.cookies.get("_last_source")
    pid_from_cookie = request.cookies.get("_pid")
    log.debug(
        f"–ü–æ–ª—É—á–µ–Ω—ã –∫—É–∫–∏: _adm_aid='{uid_from_cookie}', _last_source='{source_from_cookie}', _pid='{pid_from_cookie}'"
    )

    # 2. –§–æ—Ä–º–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è postback-–∑–∞–ø—Ä–æ—Å–∞.
    postback_url = "https://ad.admitad.com/tt"
    params = {
        "campaign_code": ADMITAD_CAMPAIGN_CODE,
        "postback_key": ADMITAD_POSTBACK_KEY,
        "channel": "admitad",
        "adm_method": "sr",
        "adm_method_name": "postback_sdk",
        "v": "2",
        "rt": "img",
        "payment_type": event.payment_type or "sale",
        "currency_code": event.currency or DEFAULT_CURRENCY_CODE,
        "publisher_id": pid_from_cookie,
        "action_code": event.action_code or DEFAULT_ACTION_CODE,
        "order_id": event.order_id,
        "uid": uid_from_cookie,
        "promocode": event.promocode or "",
    }

    # 3. –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–µ. –õ–æ–≥–∏–∫–∞ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ,
    # –ø–µ—Ä–µ–¥–∞–ª –ª–∏ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ —Ç–æ–≤–∞—Ä–∞–º.
    if event.items:
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã, —Ñ–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É (_ps)
        position_count = len(event.items)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω—ã –ª–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.
        if event.tariff_codes and len(event.tariff_codes) == position_count:
            final_tariff_codes = event.tariff_codes
            log.debug(f"–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã: {final_tariff_codes}")
        else:
            final_tariff_codes = [DEFAULT_TARIFF_CODE] * position_count
            log.debug(
                f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ç–∞—Ä–∏—Ñ–æ–≤: {final_tariff_codes}"
            )

        admitad_basket = {
            "tariff_code": final_tariff_codes,
            "position_id": [str(i + 1) for i in range(position_count)],
            "position_count": [str(position_count)] * position_count,
            "price": [str(item.price) for item in event.items],
            "quantity": [str(item.quantity) for item in event.items],
            "product_id": [item.id for item in event.items],
        }
        params["_ps"] = json.dumps(admitad_basket)
    else:
        # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞.
        log.debug(
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–∞—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–µ."
        )
        params["price"] = event.order_amount
        params["tariff_code"] = DEFAULT_TARIFF_CODE

    # 4. –õ–û–ì–ò–ö–ê –ê–¢–†–ò–ë–£–¶–ò–ò –ò –î–ï–î–£–ü–õ–ò–ö–ê–¶–ò–ò.
    # –†–µ—à–∞–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å postback.
    is_admitad_source = (
        uid_from_cookie
        and source_from_cookie
        and source_from_cookie.startswith("admitad")
    )

    # –£—Å–ª–æ–≤–∏–µ: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º, –µ—Å–ª–∏ –µ—Å—Ç—å admitad_uid –ò (–ø–æ—Å–ª–µ–¥–Ω–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫ - Admitad –ò–õ–ò –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø—Ä–æ–º–æ–∫–æ–¥).
    if (event.promocode and event.promocode.strip()) or is_admitad_source:
        attribution_reason = (
            "–ø—Ä–æ–º–æ–∫–æ–¥—É" if event.promocode and event.promocode.strip() else "cookie"
        )
        log.info(
            f"–ê—Ç—Ä–∏–±—É—Ü–∏—è Admitad –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –ø–æ {attribution_reason} –¥–ª—è –∑–∞–∫–∞–∑–∞ {event.order_id}. –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–±—ç–∫–∞..."
        )
        background_tasks.add_task(
            send_postback_in_background, postback_url, params, event.order_id
        )
        return {"status": "success", "message": "Postback scheduled."}
    else:
        # –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ, postback –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è.
        log.debug("–£—Å–ª–æ–≤–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–±—ç–∫–∞ –ù–ï –í–´–ü–û–õ–ù–ï–ù–û.")
        log.info(
            f"–î–ï–î–£–ü–õ–ò–ö–ê–¶–ò–Ø: –ö–æ–Ω–≤–µ—Ä—Å–∏—è –¥–ª—è UID '{uid_from_cookie}' –∞—Ç—Ä–∏–±—É—Ü–∏—Ä–æ–≤–∞–Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫—É '{source_from_cookie}'. –ü–æ—Å—Ç–±—ç–∫ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω."
        )
        return {"status": "deduplicated", "source": source_from_cookie}


# --- –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –æ—Ç–¥–∞—á–∏ —Å–∞–º–æ–≥–æ JS-—Ç—Ä–µ–∫–µ—Ä–∞ ---
@router.get("/main.js", summary="–û—Ç–¥–∞—á–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ JS-—Ç—Ä–µ–∫–µ—Ä–∞")
def get_tracker_script():
    """
    –≠—Ç–æ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –æ—Ç–¥–∞–µ—Ç —Ñ–∞–π–ª int_loader.js. –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ —Ç–æ–º –∂–µ –¥–æ–º–µ–Ω–µ,
    —á—Ç–æ –∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç (first-party), –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤—ã—à–∞–µ—Ç –µ–≥–æ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å
    –∫ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞–º —Ä–µ–∫–ª–∞–º—ã –∏ ITP-–º–µ—Ö–∞–Ω–∏–∑–º–∞–º –±—Ä–∞—É–∑–µ—Ä–æ–≤.
    """
    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É int_loader.js –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞ (admitad_integration.py)
    script_path = os.path.join(os.path.dirname(__file__), "assets", "int_loader.js")
    if os.path.exists(script_path):
        return FileResponse(script_path, media_type="application/javascript")
    raise HTTPException(status_code=404, detail="int_loader.js not found")
